{"version":3,"sources":["../src/app.js"],"names":["path","require","conectionString","port","Number","process","env","PORT","app","use","bodyParser","json","urlencoded","extended","mongoose","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","error","express","static","join","__dirname","mainRoutes","get","req","res","name","a","MONGODB","sendFile","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAaA;;;;;;AAZA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,kBAAkB,wGAAxB;AACA,IAAIC,OAAOC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA3B,CAAX;AACA;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,IAAIC,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAL,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA;AACA;AACA;AACA;;;AAGA;AACAK,mBAASC,OAAT,CAAiBb,eAAjB,EAAkC,EAAEc,iBAAiB,IAAnB,EAAyBC,oBAAoB,IAA7C,EAAlC,EACGC,IADH,CACQ,YAAM;AACVC,UAAQC,GAAR,CAAY,oBAAZ;AACD,CAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBH,UAAQC,GAAR,CAAYE,KAAZ;AACD,CANH;;AAQAd,IAAIC,GAAJ,CAAQc,kBAAQC,MAAR,CAAexB,KAAKyB,IAAL,CAAUC,SAAV,EAAqB,cAArB,CAAf,CAAR;AACA;AACAlB,IAAIC,GAAJ,CAAQ,OAAR,EAAiBkB,cAAjB;;AAEA;;AAEAnB,IAAIoB,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAInB,IAAJ,CAAS,EAAEoB,MAAM,OAAR,EAAiBC,GAAG3B,QAAQC,GAAR,CAAY2B,OAAZ,IAAuB,MAA3C,EAAT;AACD,CAFD;AAGAzB,IAAIoB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAII,QAAJ,CAAalC,KAAKyB,IAAL,CAAUC,YAAY,4BAAtB,CAAb;AACD,CAFD;;AAIAlB,IAAI2B,MAAJ,CAAWhC,IAAX,EAAiB,YAAM;AACrBgB,UAAQC,GAAR,oCAA6CjB,IAA7C;AACD,CAFD","file":"app.js","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport mongoose from 'mongoose';\r\nimport logger from 'morgan';\r\nconst path = require('path');\r\nconst conectionString = 'mongodb+srv://tnnshop:82ISxqEstnoh6tZc@cluster0.pam8z.gcp.mongodb.net/test?retryWrites=true&w=majority';\r\nvar port = Number(process.env.PORT || 8888);\r\n// set up dependencies\r\nconst app = express();\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(logger('dev'));\r\n// app.use((req, res, next) => {\r\n//   res.header('Access-Control-Allow-Origin', '*');\r\n//   next();\r\n// });\r\nimport mainRoutes from './routes/main';\r\n\r\n// set up mongoose\r\nmongoose.connect(conectionString, { useNewUrlParser: true, useUnifiedTopology: true })\r\n  .then(() => {\r\n    console.log('Database connected');\r\n  })\r\n  .catch((error) => {\r\n    console.log(error);\r\n  });\r\n\r\napp.use(express.static(path.join(__dirname, '../web/build')));\r\n// set up route\r\napp.use('/api/', mainRoutes);\r\n\r\n// set up route\r\n\r\napp.get('/api/name', (req, res) => {\r\n  res.json({ name: 'hyhd1', a: process.env.MONGODB || \"null\" });\r\n});\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.join(__dirname + '../client/build/index.html'));\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`Our server is running on port ${port}`);\r\n});\r\n"]}